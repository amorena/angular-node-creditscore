box: node:6.10
build:
  steps:
    - script:
        name: A step that executes `npm install` command
        code: npm install
  #after-steps:
    #- slack-notifier:
        #url: https://hooks.slack.com/services/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
       # channel: general
     #   username: MyamazingCI-CD_Wercker
      #  branch: master

push-to-releases:
  steps:
    - internal/docker-push:
            username: $DOCKER_USERNAME
            password: $DOCKER_PASSWORD
            repository: $DOCKER_REPO
            registry: $DOCKER_REGISTRY
            tag: $WERCKER_APPLICATION_NAME-$WERCKER_GIT_COMMIT
            working-dir: /pipeline/source
            cmd: node /pipeline/source/app.js

#  after-steps:
 #   - slack-notifier:
  #      url: https://hooks.slack.com/services/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
  #      channel: general
  #      username: MyamazingCI-CD_Wercker
  #      branch: master
deploy-to-oke:
  box:
        id: alpine
        cmd: /bin/sh
  steps:
    # https://github.com/wercker/step-bash-template
    # This Wercker step will look for files in our repo with a .template extension.
    # It will expand any environment variables in those files, then remove the
    # template extension.
    - bash-template

    # The step above should leave us with a Kubernetes service and deployment yml files.
    # We'll create a directory to move them to.
    - script:
        name: "Visualise Kubernetes config"
        code: cat kubernetes.yml

    - kubectl:
        name: deploy to kubernetes
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f kubernetes.yml

rest-functional-test:
  steps:
    - script:
        name: Test Microservice
        code: |
              mkdir -p "/pipeline"
              node $WERCKER_ROOT/app.js &
              sleep 2
              CREDITSCORE_URL=http://localhost:3000/creditscore
              echo 'Microservice URL=' $CREDITSCORE_URL
              if curl -X POST -H "Content-Type: application/json" -X POST -d '{"firstname":"John","lastname":"Doe","dateofbirth":"01/01/2015","ssn":"111223333"}' $CREDITSCORE_URL | grep "firstname"
              then
                  # if the keyword is in the conent
                  echo "Test passed"
              else
                  echo "Test failed"
                  exit -1
              fi

ui-functional-test:
  box:
    id: peternagy/chrome-protractor-headless-test:node9.2-chrome62
  steps:
    - script:
        name: Run UI test
        code: |
              nohup node $WERCKER_ROOT/app.js > creditscoreapp.log &
              echo 'Application URL to test: http://localhost:3000/creditscore'
              protractor $WERCKER_ROOT/test/protractor.conf.js
              exit_status=$?
              echo 'CreditScore app server log :::START'
              cat creditscoreapp.log
              echo 'CreditScore app server log :::END'
              if [ $exit_status -eq 0 ]; then
                echo "UI test passed"
              else
                echo "UI test failed"
                exit -1
              fi
